user  nginx;
worker_processes  auto;

error_log  /var/log/nginx/error.log notice;
pid        /var/run/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    keepalive_timeout  65;

    #gzip  on;

    include /etc/nginx/conf.d/*.conf;
}


# TCP/UDP proxy and load balancing block
#
#stream {
    # Example configuration for TCP load balancing

    #upstream stream_backend {
    #    zone tcp_servers 64k;
    #    server backend1.example.com:12345;
    #    server backend2.example.com:12345;
    #}

    #server {
    #    listen 12345;
    #    status_zone tcp_server;
    #    proxy_pass stream_backend;
    #}
#}


# Pass-through
stream {
    upstream ocp4poc-k8s-api {
        # Kubernetes API
        zone ocp4poc-k8s-api 64k;
        server master1.ocp.mii.lab:6443;
        server master2.ocp.mii.lab:6443;
        server master3.ocp.mii.lab:6443;
    }

    upstream ocp4poc-machine-config {
        # Machine-Config
        zone ocp4poc-machine-config 64k;
        server master1.ocp.mii.lab:22623;
        server master2.ocp.mii.lab:22623;
        server master3.ocp.mii.lab:22623;
    }

    server {
        listen 6443;
        proxy_pass ocp4poc-k8s-api;
    }

    server {
        listen 22623 ;
        proxy_pass ocp4poc-machine-config;

    }

    # Passthrough required for the routers
    upstream ocp4poc-http {
        # Worker Nodes running OCP Router
        zone ocp4poc-http 64k;
        server worker1.ocp.mii.lab:80;
        server worker2.ocp.mii.lab:80;
        server worker3.ocp.mii.lab:80;
    }
    upstream ocp4poc-https {
        # Worker Nodes running OCP Router
        zone ocp4poc-https 64k;
        server worker1.ocp.mii.lab:443;
        server worker2.ocp.mii.lab:443;
        server worker3.ocp.mii.lab:443;
    }
    server {
        listen 443;
        proxy_pass ocp4poc-https;
    }

    server {
        listen 80 ;
        proxy_pass ocp4poc-http;

    }
}
